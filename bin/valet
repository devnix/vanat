#!/bin/bash

#includes
source ~/.config/valet/vendor/valet/init.sh
source ~/.config/valet/vendor/valet/install.sh
source ~/.config/valet/vendor/valet/remove.sh
source ~/.config/valet/vendor/valet/require.sh
source ~/.config/valet/vendor/valet/search.sh
source ~/.config/valet/vendor/valet/update.sh

# Reset
Color_Off='\033[0m'       # Text Reset

# Regular Colors
Black='\033[0;30m'        # Black
Red='\033[0;31m'          # Red
Green='\033[0;32m'        # Green
Yellow='\033[0;33m'       # Yellow
Blue='\033[0;34m'         # Blue
Purple='\033[0;35m'       # Purple
Cyan='\033[0;36m'         # Cyan
White='\033[0;37m'        # White

# Break line
Break='\n'

# Display initial tool context
function main() 
{
    printf "$Green Valet$Color_Off version$Yellow 0.1.0$Color_Off beta $Break"
    printf "$Break"
    printf "$Yellow Usage:$Color_Off $Break"
    printf "   command [options] [arguments] $Break"
    printf "$Break"
    printf "$Yellow Options:$Color_Off $Break"
    printf "$Green   -v, --version$Color_Off    Display this application version $Break"
    printf "$Break"
    printf "$Yellow Available commands:$Color_Off $Break"
    printf "$Green   init$Color_Off            Creates a basic composer.json file in current directory. $Break"
    printf "$Green   install$Color_Off         Installs the project dependencies from the composer.lock file if present, or falls back on the composer.json. $Break"
    printf "$Green   remove$Color_Off          Removes a package from the require or require-dev $Break"
    printf "$Green   require$Color_Off         Adds required packages to your composer.json and installs them $Break"
    printf "$Green   search$Color_Off          Search for packages $Break"
    printf "$Green   update$Color_Off          Updates your dependencies to the latest version according to composer.json, and updates the composer.lock file. $Break"
    printf "$Break"
}

function version() 
{
    printf "version$Yellow 0.1.0$Color_Off beta $Break"
}

# Store the number of parameters
number_parameters=$#

# Save parameters
parameters=$@

if [ "$number_parameters" -gt 0 ] 
then
    case $1 in 
        'init')
            init
            ;;
        'install')
            my_install  "$parameters"
            ;;
        'remove')
            remove      "$parameters"
            ;;
        'require')
            require     "$parameters"
            ;;
        'search')
            search      "$parameters"
            ;;
        'update')
            update      "$parameters"
            ;;
        '--version')
            version
            ;;
        '-v')
            version
            ;;
    esac
else
    main
fi